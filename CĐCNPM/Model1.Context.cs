//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CĐCNPM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuanLy_KaraokeEntities : DbContext
    {
        public QuanLy_KaraokeEntities()
            : base("name=QuanLy_KaraokeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Dichvu> Dichvus { get; set; }
        public virtual DbSet<NhanVien> NhanViens { get; set; }
        public virtual DbSet<PhienDungPhong> PhienDungPhongs { get; set; }
        public virtual DbSet<Phong> Phongs { get; set; }
        public virtual DbSet<YC_dichvu> YC_dichvu { get; set; }
    
        public virtual int AUTO_IDNV(string tEN, Nullable<System.DateTime> nGAY, string gIOI, string cMND, string dIACHI, string dIENTHOAI)
        {
            var tENParameter = tEN != null ?
                new ObjectParameter("TEN", tEN) :
                new ObjectParameter("TEN", typeof(string));
    
            var nGAYParameter = nGAY.HasValue ?
                new ObjectParameter("NGAY", nGAY) :
                new ObjectParameter("NGAY", typeof(System.DateTime));
    
            var gIOIParameter = gIOI != null ?
                new ObjectParameter("GIOI", gIOI) :
                new ObjectParameter("GIOI", typeof(string));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            var dIACHIParameter = dIACHI != null ?
                new ObjectParameter("DIACHI", dIACHI) :
                new ObjectParameter("DIACHI", typeof(string));
    
            var dIENTHOAIParameter = dIENTHOAI != null ?
                new ObjectParameter("DIENTHOAI", dIENTHOAI) :
                new ObjectParameter("DIENTHOAI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AUTO_IDNV", tENParameter, nGAYParameter, gIOIParameter, cMNDParameter, dIACHIParameter, dIENTHOAIParameter);
        }
    
        public virtual int DICH_VU(string tenDV, string loaiDV, Nullable<int> giaDV)
        {
            var tenDVParameter = tenDV != null ?
                new ObjectParameter("TenDV", tenDV) :
                new ObjectParameter("TenDV", typeof(string));
    
            var loaiDVParameter = loaiDV != null ?
                new ObjectParameter("LoaiDV", loaiDV) :
                new ObjectParameter("LoaiDV", typeof(string));
    
            var giaDVParameter = giaDV.HasValue ?
                new ObjectParameter("GiaDV", giaDV) :
                new ObjectParameter("GiaDV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DICH_VU", tenDVParameter, loaiDVParameter, giaDVParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_DIFF(Nullable<System.TimeSpan> start, Nullable<System.TimeSpan> end)
        {
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(System.TimeSpan));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_DIFF", startParameter, endParameter);
        }
    
        public virtual int NHAP_PHONG(string loaiPhong, Nullable<int> giaPhong)
        {
            var loaiPhongParameter = loaiPhong != null ?
                new ObjectParameter("LoaiPhong", loaiPhong) :
                new ObjectParameter("LoaiPhong", typeof(string));
    
            var giaPhongParameter = giaPhong.HasValue ?
                new ObjectParameter("GiaPhong", giaPhong) :
                new ObjectParameter("GiaPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NHAP_PHONG", loaiPhongParameter, giaPhongParameter);
        }
    
        public virtual int PHIEN_DUNG_PHONG(string mSPhong)
        {
            var mSPhongParameter = mSPhong != null ?
                new ObjectParameter("MSPhong", mSPhong) :
                new ObjectParameter("MSPhong", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PHIEN_DUNG_PHONG", mSPhongParameter);
        }
    
        public virtual ObjectResult<usp_selectPhong_Result> usp_selectPhong()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectPhong_Result>("usp_selectPhong");
        }
    }
}
